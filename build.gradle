plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.hotels'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

//다이나믹 웹 모듈 5.0으로 고정
eclipse.wtp.facet {
    // Change the version of the Dynamic Web Module facet
    facet name: 'jst.web', version: '5.0'
}

dependencies {
	
	
	//jdbc
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	//JSP설정 
	implementation 'jakarta.servlet:jakarta.servlet-api'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'	
	//JSONObject
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'org.json:json:20231013'
	//결제 Api 의존성
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

tasks.named('test') {
	useJUnitPlatform()
}
//결제 API 추가.
repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

//톰캣 (외부WAS) 배포용 aws 설정 
bootWar.enabled= false
war.enabled = true


