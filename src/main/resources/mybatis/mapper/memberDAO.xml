<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hotels.springboot.jdbc.ImemberDAO">
	<!-- 이메일회원 등록 -->
	<insert id="insertEmail"
		parameterType="com.hotels.springboot.jdbc.MemberDTO">
		INSERT INTO member (idx,email) VALUES
		(seq_idx.nextval,#{email})
	</insert>
	<!-- 네이버회원 등록 -->
	<insert id="insertNaver"
		parameterType="com.hotels.springboot.jdbc.MemberDTO">
		INSERT INTO member (idx,naver,name) VALUES
		(seq_idx.nextval,#{naver},#{name})
	</insert>
	<!-- 이메일 회원조회 -->
	<select id="selectEmail"
		parameterType="com.hotels.springboot.jdbc.MemberDTO"
		resultType="com.hotels.springboot.jdbc.MemberDTO">
		SELECT * FROM member WHERE email=#{email}
	</select>
	<!-- 네이버 회원조회 -->
	<select id="selectNaver"
		resultType="com.hotels.springboot.jdbc.MemberDTO">
		SELECT * FROM member WHERE naver=#{naver}
	</select>
	<!-- idx로 회원조회 -->
	<select id="selectIdx"
		resultType="com.hotels.springboot.jdbc.MemberDTO">
		SELECT * FROM member WHERE idx=#{idx}
	</select>
	<!-- 회원 프로필이미지 수정 -->
	<update id="updateProfile"
		parameterType="com.hotels.springboot.jdbc.MemberDTO">
		UPDATE member set profile=#{profile}
		where idx=#{idx}
	</update>
	<!-- 회원정보 수정 -->
	<update id="update"
		parameterType="com.hotels.springboot.jdbc.MemberDTO">
		UPDATE member
		<set>
			name = #{name},
			nickname = #{nickname},
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="naver != null and naver != ''">
				naver = #{naver}
			</if>
		</set>
		where idx=#{idx}
	</update>


</mapper>